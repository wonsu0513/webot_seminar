#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include <webots/robot.h>
#include <webots/motor.h>
#include <webots/keyboard.h>
#include <webots/distance_sensor.h>
#include <webots/supervisor.h>
#include <webots/gps.h>


#define TIME_STEP 64
#define MAX_SPEED 6.28



double* robot_controller(double* start_pos, double* target_pos) {

	// your code


      return motor_velocity;
}


int main(int argc, char **argv)
{
  wb_robot_init();
 
  WbNodeRef mybot = wb_supervisor_node_get_from_def("e-puck");
  WbFieldRef translationField = wb_supervisor_node_get_field(mybot, "translation");
  WbFieldRef rotationField = wb_supervisor_node_get_field(mybot, "rotation");


   WbDeviceTag left_motor = wb_robot_get_device("left wheel motor");
   WbDeviceTag right_motor = wb_robot_get_device("right wheel motor");
   WbDeviceTag wonsu_ps0 = wb_robot_get_device("ps0");
   WbDeviceTag wonsu_ps7 = wb_robot_get_device("ps7");
   WbDeviceTag gps = wb_robot_get_device("gps");

   wb_distance_sensor_enable(wonsu_ps0, TIME_STEP);
   wb_distance_sensor_enable(wonsu_ps7, TIME_STEP);
   wb_gps_enable(gps, TIME_STEP);

   wb_motor_set_position(left_motor, INFINITY);
   wb_motor_set_position(right_motor, INFINITY);
   wb_motor_set_velocity(left_motor, 0);
   wb_motor_set_velocity(right_motor, 0);
   
   wb_keyboard_enable(TIME_STEP);
   
   
   WbUserInputEvent event_type;

   int key_value = 0;
   double ps0_data = 0;
   double ps7_data = 0;
   double left_speed= 0;
   double right_speed = 0;

   double initial_position[3] = {0.1, 0.0, 0.1};
   double initial_angle[4] = {0.0, 1.0, 0.0, 0.0};

   wb_supervisor_field_set_sf_vec3f(translationField, initial_position);


   while (wb_robot_step(TIME_STEP) != -1) {
    const double *translation = wb_supervisor_field_get_sf_vec3f(translationField);
    const double *rotation = wb_supervisor_field_get_sf_rotation(rotationField);
    const double *gps_values = wb_gps_get_values(gps);

    double robot_current_position[3] = {translation[0], translation[2], rotation[3]};
     
    double mouse_goal_position[3] =  {0.8, 0.8, -1.5708/2};


    const double *wonsu = robot_controller(robot_current_position, mouse_goal_position);

    wb_motor_set_velocity(left_motor, wonsu[0]);
    wb_motor_set_velocity(right_motor,wonsu[1]); 
  
  };

  wb_robot_cleanup();

  return 0;
}
